<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:util="http://www.springframework.org/schema/util" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-2.0.xsd">

	<!-- XDI ENDPOINT REGISTRY AND TRANSPORT -->

	<bean id="HttpMessagingTargetRegistry" class="xdi2.transport.impl.http.registry.HttpMessagingTargetRegistry" init-method="init" destroy-method="shutdown" />

	<bean id="HttpTransport" class="xdi2.transport.impl.http.HttpTransport" init-method="init" destroy-method="shutdown">
		<property name="httpMessagingTargetRegistry" ref="HttpMessagingTargetRegistry" />
		<!-- DISABLED, SINCE THE ADMIN INTERFACE HAS NO SECURITY AT ALL
		<property name="interceptors">
			<util:list>
				<bean class="xdi2.transport.impl.http.interceptor.impl.DebugHttpTransportInterceptor" />
				<bean class="xdi2.transport.impl.http.interceptor.impl.StatusHttpTransportInterceptor" />
			</util:list>
		</property>
		-->
	</bean>

	<!-- SPRING -->

	<bean id="conversionService" class="org.springframework.context.support.ConversionServiceFactoryBean">
		<property name="converters">
			<list>
				<bean class="xdi2.transport.spring.XDI2SpringConverter" />
			</list>
		</property>
	</bean>

    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>file:/etc/xdi2/xdi2-csp.properties</value>
            </list>
        </property>
        <property name="ignoreResourceNotFound" value="false" />
        <property name="ignoreUnresolvablePlaceholders" value="false" />
    </bean>

	<!-- MESSAGING TARGET TO BE USED AS A PROTOTYPE FOR MESSAGING TARGET FACTORIES -->

	<bean id="prototypeGraphFactory" class="xdi2.core.impl.memory.MemoryGraphFactory">
	</bean>

	<bean id="prototypeGraph" factory-bean="prototypeGraphFactory" factory-method="openGraph" />

	<bean id="prototypeMessagingTarget" class="xdi2.messaging.target.impl.graph.GraphMessagingTarget">
		<property name="graph" ref="prototypeGraph" />
		<property name="interceptors">
			<util:list>
				<bean class="xdi2.messaging.target.interceptor.impl.BootstrapInterceptor">
					<property name="bootstrapRootLinkContract" value="true" />
					<property name="bootstrapPublicLinkContract" value="true" />
					<property name="bootstrapTimestamp" value="true" />
					<property name="bootstrapGraph">
						<value>
							({$self}/$public)$do/$get/{$self}$msg$encrypt$keypair&lt;$public&gt;&lt;$key&gt;
							({$self}/$public)($do/$get){$self}$msg$encrypt$keypair/$is#/{}
							({$self}/$public)$do/$get/{$self}$msg$sig$keypair&lt;$public&gt;&lt;$key&gt;
							({$self}/$public)($do/$get){$self}$msg$sig$keypair/$is#/{}
						</value>
					</property>
					<property name="bootstrapMessageEnvelope">
						<value>
							($anon[$msg]!1$do/$do$keypair){$self}$msg$encrypt$keypair/$is#/$rsa$2048
							($anon[$msg]!1$do/$do$keypair){$self}$msg$sig$keypair/$is#/$rsa$2048
						</value>
					</property>
				</bean>
				<bean class="xdi2.messaging.target.interceptor.impl.RefInterceptor" />
				<bean class="xdi2.messaging.target.interceptor.impl.ToInterceptor" />
				<bean class="xdi2.messaging.target.interceptor.impl.authentication.secrettoken.AuthenticationSecretTokenInterceptor">
					<property name="secretTokenAuthenticator">
						<bean class="xdi2.messaging.target.interceptor.impl.authentication.secrettoken.GraphSecretTokenAuthenticator">
							<property name="globalSalt" value="00000000-0000-0000-0000-000000000000" />
							<property name="secretTokenGraph" ref="registryGraph" />
						</bean>
					</property>
				</bean>
				<bean class="xdi2.messaging.target.interceptor.impl.linkcontract.LinkContractInterceptor" />
			</util:list>
		</property>
		<property name="contributors">
			<util:list>
				<bean class="xdi2.messaging.target.contributor.impl.digest.GenerateDigestSecretTokenContributor">
					<property name="globalSalt" value="00000000-0000-0000-0000-000000000000" />
				</bean>
				<bean class="xdi2.messaging.target.contributor.impl.keygen.GenerateKeyContributor" />
				<bean class="xdi2.messaging.target.contributor.impl.connection.ConnectionRequestContributor" />
				<bean class="xdi2.messaging.target.contributor.impl.connection.InverseOperationContributor">
					<property name="xdiDiscoveryClient" value="${discoveryservice}" />
				</bean>
			</util:list>
		</property>
	</bean>

	<!-- MESSAGING TARGET FACTORY at /graphs/* -->

	<bean id="registryGraphfactory" class="xdi2.core.impl.wrapped.file.FileWrapperGraphFactory">
		<property name="path" value="registry.xdi" />
		<property name="mimeType" value="text/xdi;ordered=1" />
	</bean>

	<bean id="registryGraph" factory-bean="registryGraphfactory" factory-method="openGraph" />

	<bean name="/graphs/*" class="xdi2.transport.impl.http.factory.impl.RegistryGraphMessagingTargetFactory">
		<property name="prototypeMessagingTarget" ref="prototypeMessagingTarget" />
		<property name="registryGraph" ref="registryGraph" />
	</bean>

	<!-- REGISTRY MESSAGING TARGET at /registry -->

	<bean name="/registry" class="xdi2.messaging.target.impl.graph.GraphMessagingTarget">
		<property name="graph" ref="registryGraph" />
		<property name="interceptors">
			<util:list>
				<bean class="xdi2.messaging.target.interceptor.impl.BootstrapInterceptor">
					<property name="bootstrapOwner" value="[+]!:uuid:9999" />
					<property name="bootstrapOwnerSynonyms">
						<util:list>
							<value>+testcsp</value>
						</util:list>
					</property>
					<property name="bootstrapRootLinkContract" value="true" />
					<property name="bootstrapPublicLinkContract" value="true" />
					<property name="bootstrapTimestamp" value="true" />
					<property name="bootstrapGraph">
						<value>
							({$self}/$public)$do/$get/{$self}$msg$encrypt$keypair&lt;$public&gt;&lt;$key&gt;
							({$self}/$public)($do/$get){$self}$msg$encrypt$keypair/$is#/{}
							({$self}/$public)$do/$get/{$self}$msg$sig$keypair&lt;$public&gt;&lt;$key&gt;
							({$self}/$public)($do/$get){$self}$msg$sig$keypair/$is#/{}
						</value>
					</property>
					<property name="bootstrapMessageEnvelope">
						<value>
							($anon[$msg]!1$do/$do$keypair){$self}$msg$encrypt$keypair/$is#/$rsa$2048
							($anon[$msg]!1$do/$do$keypair){$self}$msg$sig$keypair/$is#/$rsa$2048
						</value>
					</property>
				</bean>
				<bean class="xdi2.messaging.target.interceptor.impl.RefInterceptor" />
				<bean class="xdi2.messaging.target.interceptor.impl.ToInterceptor" />
				<bean class="xdi2.messaging.target.interceptor.impl.authentication.secrettoken.AuthenticationSecretTokenInterceptor">
					<property name="secretTokenAuthenticator">
						<bean class="xdi2.messaging.target.interceptor.impl.authentication.secrettoken.StaticSecretTokenAuthenticator">
							<property name="globalSalt" value="00000000-0000-0000-0000-000000000000" />
							<property name="localSaltAndDigestSecretTokens">
								<util:map>
									<entry key="[+]!:uuid:9999" value="xdi2-digest:00000000-0000-0000-0000-000000000000:a7292f2347aef29a9e4c05d35764019106143a339b6e9bb39faee53103e1d6f55e49213d77d16a326a91bab0fc6885779d04e2e4470125720860cf54f872b3bb" />
								</util:map>
							</property>
						</bean>
					</property>
				</bean>
				<bean class="xdi2.messaging.target.interceptor.impl.linkcontract.LinkContractInterceptor" />
			</util:list>
		</property>
		<property name="contributors">
			<util:list>
				<bean class="xdi2.messaging.target.contributor.impl.digest.GenerateDigestSecretTokenContributor">
					<property name="globalSalt" value="00000000-0000-0000-0000-000000000000" />
				</bean>
				<bean class="xdi2.messaging.target.contributor.impl.keygen.GenerateKeyContributor" />
				<bean class="xdi2.messaging.target.contributor.impl.connection.ConnectionRequestContributor" />
				<bean class="xdi2.messaging.target.contributor.impl.connection.InverseOperationContributor">
					<property name="xdiDiscoveryClient" value="${discoveryservice}" />
				</bean>
			</util:list>
		</property>
	</bean>

</beans>
